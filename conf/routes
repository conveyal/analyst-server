# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~
GET     /		                controllers.Application.index()

GET		/messages				controllers.Application.jsMessages()

# data api

GET     /api/project					controllers.Api.getProject(id:String = null)
GET     /api/project/:id				controllers.Api.getProject(id:String)
POST    /api/project/					controllers.Api.createProject()
PUT     /api/project/:id				controllers.Api.updateProject(id:String)
DELETE  /api/project/:id				controllers.Api.deleteProject(id:String)

GET     /api/shapefile					controllers.Api.getShapefile(id:String = null)
GET     /api/shapefile/:id				controllers.Api.getShapefile(id:String)
POST    /api/shapefile/					controllers.Api.createShapefile()
PUT     /api/shapefile/:id				controllers.Api.updateShapefile(id:String)
DELETE  /api/shapfile/:id				controllers.Api.deleteShapefile(id:String)

GET     /api/pointset					controllers.Api.getPointset(id:String ?= null, projectId:String ?= null)
GET     /api/pointset/:id				controllers.Api.getPointsetById(id:String)
POST    /api/pointset/					controllers.Api.createPointset()
PUT     /api/pointset/:id				controllers.Api.updatePointset(id:String)
DELETE  /api/pointset/:id				controllers.Api.deletePointset(id:String)

GET     /api/scenario					controllers.Api.getScenario(id:String ?= null, projectId:String ?= null)
GET     /api/scenario/:id				controllers.Api.getScenarioById(id:String)
POST    /api/scenario/					controllers.Api.createScenario()
PUT     /api/scenario/:id				controllers.Api.updateScenario(id:String)
DELETE  /api/scenario/:id				controllers.Api.deleteScenario(id:String)

GET     /tile/spatial                  	controllers.Tiles.spatial(spatialId:String, x:Integer, y:Integer, z:Integer)
GET     /tile/spt                  		controllers.Tiles.spt(sptId:String, spatialId:String, x:Integer, y:Integer, z:Integer, showIso:Boolean ?= true, showPoints:Boolean ?= true, timeLimit:Integer ?= 3600)
GET     /tile/compareSpt                controllers.Tiles.compareSpt(sptId1:String, sptId2:String, spatialId:String, x:Integer, y:Integer, z:Integer, timeLimit:Integer ?= 3600)


GET     /api/spt                    	controllers.Api.spt(graphId:String, spatialId:String, lat:Double, lon:Double, mode:String)

GET     /api/sptSummary                 controllers.Api.sptSummary(sptId:String, spatialId:String, timeLimit:Integer ?= 3600)

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)
